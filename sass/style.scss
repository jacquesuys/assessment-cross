@import "../bower_components/susy/sass/susy";

*, *:before, *:after {
  -moz-box-sizing: border-box;
  -webkit-box-sizing: border-box;
  box-sizing: border-box; 
}

$gray: #CACBCB;
$blue: #4C85B7;
$red: #BB0008;
$green: #669945;

@mixin clearfix {
  &:after {
    content: "";
    display: table;
    clear: both;
  }
}

@mixin gradient($color, $opacity: 1, $stop: 100%) {
  background: -moz-linear-gradient(left, rgba($color, $opacity) 0%, rgba($color, 0) $stop);
  background: -webkit-linear-gradient(left, rgba($color, $opacity) 0%, rgba($color, 0) $stop);
  background: linear-gradient(to right, rgba($color, $opacity) 0%, rgba($color, 0) $stop);
  // filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#ffffff', endColorstr='#00ffffff',GradientType=0 );
}

@mixin status($color, $background: false) {
  color: rgba($color, 1);
  border-color: rgba($color, 1);

  @if $background != false {
    @include gradient($background);
  }
}

body {
  font-size: 16px;
  font-family: "Helvetica-Neue", Helvetica, Arial, sans-serif;
}

.container {
  @include container(960px);
  background-color: #F6F9FC;
  padding: 5px;
}

.row {
  @include clearfix;
  border-width: 1px;
  border-style: solid;
  border-color: transparent;
  background-color: #FBFCFE;
  text-align: center;
  font-size: 0.875rem; // 14 / 16
  margin-bottom: 10px;
  padding: 5px;

  .heading {
    @include span(1 of 8);

    &:last-child {
      margin: 0;
    }
  }

  .col {
    @include span(1 of 8);
    white-space: nowrap;
    overflow: hidden;

    // TODO add nth-child selectors might change 
    // to classes dep browser requirements
    @for $i from 5 through 9 {
      &:nth-child(#{$i}) {
        border: solid 1px #CACBCB;

        .bar {
          display: block;
          height: 20px;
          background-color: #D8D8D8;
        }

        .content {
          display: none;
        }
      }
    }

    &:nth-child(8) {
      margin: 0;
    }

    &:nth-child(9) {
      display: none;
    }
  }

  &.active {
    .col:nth-child(5) {
      clear: both;
    }

    .col {
      @for $i from 5 through 9 {
        &:nth-child(#{$i}) {
          @include span(1 of 5);

          .bar {
            display: none;
          }

          .content {
            display: block;
          }
        }
      }
    }

    .col:nth-child(9) {
      display: block;
      margin: 0;
    }
  }
}

// states
.pending {
  @include status($gray);
}

.running {
  @include status($blue, lighten($blue, 50%));
}

.rejected {
  @include status($red, lighten($red, 50%));
}

.accepted {
  @include status($green, lighten($green, 50%));
}

// progress bars
.run {
  background-color: $blue;
}

.pass {
  background-color: $green;
}

.fail {
  background-color: $red;
}

